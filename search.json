[{"path":[]},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement paul.govan2@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reliability Growth Analysis","text":"Reliability Growth Analysis (RGA) crucial method evaluating reliability systems products improves time, particularly development testing phases. monitoring failures implementing corrective actions, engineers can track rate reliability improvement forecast future performance. RGA especially useful scenarios iterative enhancements made—design updates process optimizations—ultimate goal achieving mature, dependable product.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-crow-amsaa-model","dir":"Articles","previous_headings":"","what":"The Crow-AMSAA Model","title":"Reliability Growth Analysis","text":"Crow-AMSAA introduced Larry Crow 1975, widely adopted model reliability engineering. model takes failure behavior Non-Homogeneous Poisson Process (NHPP) governed power law, making particularly effective systems undergoing reliability growth due continuous improvements.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"non-homogeneous-poisson-process","dir":"Articles","previous_headings":"The Crow-AMSAA Model","what":"Non-Homogeneous Poisson Process:","title":"Reliability Growth Analysis","text":"NHPP, rate failures constant time—changes improvements made. individual failure events still follow Poisson distribution, intensity (rate) failures time-dependent. characteristic allows Crow-AMSAA model capture reliability growth (decreasing failure rate) degradation (increasing failure rate).","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-power-law-model","dir":"Articles","previous_headings":"The Crow-AMSAA Model","what":"The Power Law Model:","title":"Reliability Growth Analysis","text":"failure intensity (rate failures per time unit) modeled power function time: λ(t)=β⋅tβ−1 \\lambda(t) = \\beta \\cdot t^{\\beta - 1} : λ(t)\\lambda(t) failure intensity time tt, β\\beta shape parameter, tt time. cumulative number failures time tt given : N(t)=λ0⋅tβ N(t) = \\lambda_0 \\cdot t^{\\beta} : N(t)N(t) cumulative number failures, λ0\\lambda_0 scale parameter.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"parameters","dir":"Articles","previous_headings":"The Crow-AMSAA Model","what":"Parameters:","title":"Reliability Growth Analysis","text":"Shape Parameter (β\\beta) indicates whether system improving deteriorating: β\\beta > 1, failures increasing time, indicating reliability worsening. β\\beta < 1, failures decreasing, indicating reliability improving time. β\\beta = 1 implies constant failure rate (growth degradation). Scale Parameter (λ0\\lambda_0) related initial failure rate.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"example","dir":"Articles","previous_headings":"The Crow-AMSAA Model","what":"Example","title":"Reliability Growth Analysis","text":"First, load package: Next, set cumulative time failure data: run rga plot results:","code":"library(ReliaGrowR) times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) result <- rga(times, failures) plot_rga(result)"},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-piecewise-nhpp-model","dir":"Articles","previous_headings":"","what":"The Piecewise NHPP Model","title":"Reliability Growth Analysis","text":"Piecewise NHPP, developed Guo et al. (2010), extends traditional NHPP allowing different time segments follow failure distributions. method especially useful failure behavior shifts across phases development — early, middle, late stages — underlying reliability dynamics may differ.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-failure-distribution","dir":"Articles","previous_headings":"The Piecewise NHPP Model","what":"The Failure Distribution","title":"Reliability Growth Analysis","text":"intensity function time segment ii modeled : λi(t)=βiηi(t−ti−1ηi)βi−1 \\lambda_i(t) = \\frac{\\beta_i}{\\eta_i} \\left( \\frac{t - t_{-1}}{\\eta_i} \\right)^{\\beta_i - 1} : λi(t)\\lambda_i(t) failure intensity time interval ii, βi\\beta_i shape parameter interval ii, ηi\\eta_i scale parameter (characteristic life) interval ii, ti−1t_{-1} start time interval.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"example-1","dir":"Articles","previous_headings":"The Piecewise NHPP Model","what":"Example","title":"Reliability Growth Analysis","text":"First, set cumulative time/failure data specify breakpoint: run rga plot results:","code":"times <- c(25, 55, 97, 146, 201, 268, 341, 423, 513, 609, 710, 820, 940, 1072, 1217) failures <- c(1, 1, 2, 4, 4, 1, 1, 2, 1, 4, 1, 1, 3, 3, 4) breaks <- 500 result <- rga(times, failures, model_type = \"Piecewise NHPP\", breaks = breaks) plot_rga(result)"},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-piecewise-nhpp-with-change-point-detection","dir":"Articles","previous_headings":"","what":"The Piecewise NHPP with Change Point Detection","title":"Reliability Growth Analysis","text":"enhanced version Piecewise NHPP incorporates change point detection, identifies time points underlying failure process shifts. Rather manually specifying breakpoints, model automatically segments data based significant changes reliability behavior using statistical techniques.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"example-2","dir":"Articles","previous_headings":"The Piecewise NHPP with Change Point Detection","what":"Example","title":"Reliability Growth Analysis","text":"First, set cumulative time failure data: run rga plot results:","code":"times <- c(25, 55, 97, 146, 201, 268, 341, 423, 513, 609, 710, 820, 940, 1072, 1217) failures <- c(1, 1, 2, 4, 4, 1, 1, 2, 1, 4, 1, 1, 3, 3, 4) result <- rga(times, failures, model_type = \"Piecewise NHPP\") plot_rga(result)"},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"the-duane-model","dir":"Articles","previous_headings":"","what":"The Duane Model","title":"Reliability Growth Analysis","text":"Duane Model, introduced J.T. Duane 1964, graphical technique evaluating reliability growth. model based assumption reliability improves time visualizes via log-log plot cumulative failure rate (mean time failures, MTBF) versus time.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"example-3","dir":"Articles","previous_headings":"The Duane Model","what":"Example","title":"Reliability Growth Analysis","text":"First, set cumulative time failure data: plot results:","code":"times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) fit <- duane_plot(times, failures)"},{"path":"https://paulgovan.github.io/ReliaGrowR/articles/RGA.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Reliability Growth Analysis","text":"Reliability Growth Analysis (RGA) provides powerful statistical framework tracking predicting system’s reliability evolves throughout development. Models like Crow-AMSAA, Piecewise NHPP, Duane Model allow engineers analysts quantify improvements (regressions) reliability, understand system behavior across development phases, detect significant shifts failure patterns, guide design changes process improvements.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Govan. Author, maintainer, copyright holder.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Govan P (2024). ReliaGrowR: Reliability Growth Analysis. doi:10.32614/CRAN.package.ReliaGrowR, R package version 0.1, https://cran.r-project.org/package=ReliaGrowR.","code":"@Manual{,   title = {ReliaGrowR: Reliability Growth Analysis},   author = {Paul Govan},   year = {2024},   note = {R package version 0.1},   url = {https://cran.r-project.org/package=ReliaGrowR},   doi = {10.32614/CRAN.package.ReliaGrowR}, }"},{"path":"https://paulgovan.github.io/ReliaGrowR/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Reliability Growth Analysis","text":"Welcome ReliaGrowR! package provides modeling plotting functions Reliability Growth Analysis (RGA), including: Duane Analysis Crow-AMSAA NHPP Piecewise Weibull NHPP Piecewise Weibull NHPP Change Point Detection learn RGA package, please view vignette.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Reliability Growth Analysis","text":"install release version ReliaGrowR, use: can install development version ReliaGrowR like :","code":"install_packages('ReliaGrowR') devtools::install_github('paulgovan/ReliaGrowR')"},{"path":"https://paulgovan.github.io/ReliaGrowR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Reliability Growth Analysis","text":"basic example Reliability Growth Analysis: First, load package: Next, set cumulative time failure data: run rga plot results:","code":"library(ReliaGrowR) times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) result <- rga(times, failures) plot_rga(result)"},{"path":"https://paulgovan.github.io/ReliaGrowR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Reliability Growth Analysis","text":"Please note ReliaGrowR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/duane_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Duane Analysis. — duane_plot","title":"Duane Analysis. — duane_plot","text":"function performs Duane analysis (1962) doi:10.1109/TA.1964.4319640 provided failure data.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/duane_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duane Analysis. — duane_plot","text":"","code":"duane_plot(   times,   failures,   plot = TRUE,   log = TRUE,   point_col = \"black\",   line_col = \"black\",   xlab = \"Cumulative Time\",   ylab = \"Cumulative MTBF\",   main = \"Duane Plot with Cumulative MTBF\" )"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/duane_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duane Analysis. — duane_plot","text":"times vector cumulative times failures occurred. failures vector number failures corresponding time times. plot Show Duane plot (TRUE) hide plot (FALSE). log Logical indicating whether use logarithmic scale plot (default: TRUE). point_col Color data points (default: \"black\"). line_col Color fitted line (default: \"black\"). xlab Label x-axis (default: \"Cumulative Time\"). ylab Label y-axis (default: \"Cumulative MTBF\"). main Title plot (default: \"Duane Plot Cumulative MTBF\").","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/duane_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duane Analysis. — duane_plot","text":"list containing fitted model, AIC, BIC.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/duane_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duane Analysis. — duane_plot","text":"","code":"times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) fit <- duane_plot(times, failures)  print(fit) #> Duane Analysis Result #> ---------------------- #> Linear model (log-log scale): log(MTBF) ~ log(Time) #>  #> Coefficients: #>  (Intercept) log_cum_time  #>    3.6144974    0.2013244  #>  #> AIC: -3.55, BIC: -4.72"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/plot_rga.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Reliability Growth Analysis Results — plot_rga","title":"Plot Reliability Growth Analysis Results — plot_rga","text":"function generates plot results Reliability Growth Analysis (RGA).","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/plot_rga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Reliability Growth Analysis Results — plot_rga","text":"","code":"plot_rga(   rga_obj,   point_col = \"black\",   line_col = \"black\",   xlab = \"Cumulative Time\",   ylab = \"Cumulative Failures\",   main = \"Reliability Growth Analysis\",   conf_bounds = TRUE,   legend = TRUE,   log = FALSE,   legend_pos = \"bottomright\" )"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/plot_rga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Reliability Growth Analysis Results — plot_rga","text":"rga_obj object class rga, contains results RGA model. point_col Color data points (default: \"black\"). line_col Color fitted line (default: \"black\"). xlab Label x-axis (default: \"Cumulative Time\"). ylab Label y-axis (default: \"Cumulative Failures\"). main Title plot (default: \"Reliability Growth Analysis\"). conf_bounds Logical indicating whether include confidence bounds (default: TRUE). legend Logical indicating whether show legend (default: TRUE). log Logical indicating whether use log-log scale (default: FALSE). legend_pos Position legend (default: \"bottomright\").","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/plot_rga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Reliability Growth Analysis Results — plot_rga","text":"function return value.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/plot_rga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Reliability Growth Analysis Results — plot_rga","text":"","code":"times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) result <- rga(times, failures) plot_rga(result)"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.duane.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for duane objects. — print.duane","title":"Print method for duane objects. — print.duane","text":"function prints summary Duane analysis result.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.duane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for duane objects. — print.duane","text":"","code":"# S3 method for class 'duane' print(x, ...)"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.duane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for duane objects. — print.duane","text":"x object class \"duane\" returned duane_plot function. ... Additional arguments (used).","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.rga.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for rga objects. — print.rga","title":"Print method for rga objects. — print.rga","text":"function prints summary RGA analysis result.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.rga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for rga objects. — print.rga","text":"","code":"# S3 method for class 'rga' print(x, ...)"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/print.rga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for rga objects. — print.rga","text":"x object class rga. ... Additional arguments (used).","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/rga.html","id":null,"dir":"Reference","previous_headings":"","what":"Reliability Growth Analysis. — rga","title":"Reliability Growth Analysis. — rga","text":"function performs reliability growth analysis using Crow-AMSAA model Crow (1975) https://apps.dtic.mil/sti/citations/ADA020296 piecewise NHPP model Guo et al. (2010) doi:10.1109/RAMS.2010.5448029.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/rga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reliability Growth Analysis. — rga","text":"","code":"rga(   times,   failures,   model_type = \"Crow-AMSAA\",   breaks = NULL,   conf_level = 0.95 )"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/rga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reliability Growth Analysis. — rga","text":"times vector cumulative times failures occurred. failures vector number failures corresponding time times. model_type model type. Either Crow-AMSAA (default) Piecewise NHPP change point detection. breaks optional vector breakpoints Piecewise NHPP model. conf_level desired confidence level, defaults 95%.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/rga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reliability Growth Analysis. — rga","text":"function returns object class rga contains results model.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/rga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reliability Growth Analysis. — rga","text":"","code":"times <- c(100, 200, 300, 400, 500) failures <- c(1, 2, 1, 3, 2) result <- rga(times, failures) print(result) #> Reliability Growth Analysis (RGA) #> --------------------------------- #> Model Type: Crow-AMSAA  #>  #> Parameters (per segment): #>   Beta: 0.7987 #>   Lambda: 0.0269 #>  #> Goodness of Fit: #>   AIC: -3.55 #>   BIC: -4.72"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/weibull_to_rga.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull to RGA — weibull_to_rga","title":"Weibull to RGA — weibull_to_rga","text":"function converts Weibull data (failure suspension times) format suitable reliability growth analysis (RGA).","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/weibull_to_rga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull to RGA — weibull_to_rga","text":"","code":"weibull_to_rga(failures, suspensions = NULL)"},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/weibull_to_rga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull to RGA — weibull_to_rga","text":"failures vector failure times. suspensions vector suspension (censoring) times.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/weibull_to_rga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull to RGA — weibull_to_rga","text":"data frame times failure counts suitable reliability growth analysis.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/reference/weibull_to_rga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull to RGA — weibull_to_rga","text":"","code":"failures <- c(100, 200, 200, 400) suspensions <- c(250, 350, 450) result <- weibull_to_rga(failures, suspensions) print(result) #>   CumulativeTime Failures #> 1            100        1 #> 2            300        2 #> 6           1500        1"},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"reliagrowr-014","dir":"Changelog","previous_headings":"","what":"ReliaGrowR 0.1.4","title":"ReliaGrowR 0.1.4","text":"CRAN release: 2025-05-16","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"New features","title":"ReliaGrowR 0.1.4","text":"New custom print methods RGA Duane models. plot options RGA Duane models.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"minor-updates-and-bug-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"Minor Updates and Bug Fixes","title":"ReliaGrowR 0.1.4","text":"minor improvements, documentation updates, bug fixes.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"reliagrowr-013","dir":"Changelog","previous_headings":"","what":"ReliaGrowR 0.1.3","title":"ReliaGrowR 0.1.3","text":"CRAN release: 2024-11-16","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"minor-updates-and-bug-fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Minor Updates and Bug Fixes","title":"ReliaGrowR 0.1.3","text":"Model results now include details model parameters including standard error, confidence bounds, etc. minor improvements.","code":""},{"path":[]},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"minor-updates-and-bug-fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Minor Updates and Bug Fixes","title":"ReliaGrowR 0.1.2","text":"Duane model includes optional plot argument. minor improvements.","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"reliagrowr-011","dir":"Changelog","previous_headings":"","what":"ReliaGrowR 0.1.1","title":"ReliaGrowR 0.1.1","text":"CRAN release: 2024-11-01","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"minor-updates-and-bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor Updates and Bug Fixes","title":"ReliaGrowR 0.1.1","text":"RGA Duane model results now include goodness fit metrics (AIC BIC). Duane model results now include fitted values. minor improvements","code":""},{"path":"https://paulgovan.github.io/ReliaGrowR/news/index.html","id":"reliagrowr-010","dir":"Changelog","previous_headings":"","what":"ReliaGrowR 0.1.0","title":"ReliaGrowR 0.1.0","text":"CRAN release: 2024-09-19 Initial release.","code":""}]
